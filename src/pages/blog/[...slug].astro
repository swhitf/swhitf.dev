---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import '../../styles/blog.css';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog', ({ data }:any) => {
    return import.meta.env.PROD ? data.draft !== true : true;
  });
  return blogEntries.map((entry:any) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props as any;
const { Content } = await entry.render();

function formatDate(date: Date) {
  return new Date(date).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
}
---

<Layout title={`${entry.data.title} - Steve Whitfield`}>
  <main class="max-w-4xl mx-auto px-4 py-8">
    <!-- Back Link -->
    <a
      href="/blog"
      class="inline-flex items-center gap-2 text-teal-400 hover:text-teal-300 mb-8 transition-colors"
    >
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
      </svg>
      Back to blog
    </a>

    <!-- Article Header -->
    <article class="prose prose-invert prose-lg max-w-none">
      <header class="mb-8 pb-8 border-b border-white/10">
        <h1 class="text-5xl font-bold text-white mb-4">{entry.data.title}</h1>

        <div class="flex flex-wrap items-center gap-4 text-white/60 text-base">
          <time datetime={entry.data.pubDate.toISOString()}>
            {formatDate(entry.data.pubDate)}
          </time>

          {entry.data.updatedDate && (
            <>
              <span>•</span>
              <span>
                Updated: {formatDate(entry.data.updatedDate)}
              </span>
            </>
          )}

          {entry.data.tags && entry.data.tags.length > 0 && (
            <>
              <span>•</span>
              <div class="flex gap-2">
                {entry.data.tags.map((tag:any) => (
                  <span class="px-2 py-1 bg-teal-500/20 text-teal-300 rounded-full text-sm">
                    {tag}
                  </span>
                ))}
              </div>
            </>
          )}
        </div>

        {entry.data.description && (
          <p class="text-xl text-white/80 mt-4 italic">
            {entry.data.description}
          </p>
        )}
      </header>

      {entry.data.heroImage && (
        <img
          src={entry.data.heroImage}
          alt={entry.data.title}
          class="w-full rounded-xl mb-8 border border-white/10"
        />
      )}

      <!-- Article Content -->
      <div class="blog-content">
        <Content />
      </div>
    </article>
  </main>
</Layout>
